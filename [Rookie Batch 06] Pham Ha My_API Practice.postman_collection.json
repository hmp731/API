{
	"info": {
		"_postman_id": "ff3e6891-0c27-4b36-95a8-cd7d3b9d2104",
		"name": "[Rookie Batch 06] Pham Ha My_API Practice",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20425002"
	},
	"item": [
		{
			"name": "04 GET /todo (404) not plural",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"01. Check status code is 404 Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todo",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "05 GET /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"01. Check status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"02. Check id is 797\", function () {\r",
							"    var expectID = pm.response.json().todos[0].id;\r",
							"    pm.expect(expectID).to.eql(1238);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos/1238",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos",
						"1238"
					]
				}
			},
			"response": []
		},
		{
			"name": "06 GET /todos/{id} (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"01. Check status code is 404 Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos/1024",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos",
						"1024"
					]
				}
			},
			"response": []
		},
		{
			"name": "07 HEAD /todos (200)",
			"request": {
				"method": "HEAD",
				"header": [],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "08 POST /todos (201)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "        {\r\n            \"title\": \"API Practice\",\r\n            \"doneStatus\": true,\r\n            \"description\": \"API Practice 08\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "09 GET /todos ?filter (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"01. Check status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"02. Check response body doneStatus field is true\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"true\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos?doneStatus=true",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "true"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "10 POST /todos doneStatus (400)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"01. Check status code is 400 Bad Request\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"02. Check response body display error message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"errorMessage\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "        {\r\n            \"title\": \"API Practice\",\r\n            \"doneStatus\": abc,\r\n            \"description\": \"API Practice 10\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "11 POST /todos/{id) (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"01. Check status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"02. Check response body title field is updated\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"update title\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "        {\r\n            \"title\": \"API Testing\",\r\n            \"doneStatus\": true,\r\n            \"description\": \"update title\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos/1238",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos",
						"1238"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 DELETE /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"01. Check status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos/1238",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos",
						"1238"
					]
				}
			},
			"response": []
		},
		{
			"name": "13 OPTION /todos (200)",
			"request": {
				"method": "OPTIONS",
				"header": [],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		}
	]
}